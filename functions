#!/usr/bin/bash

command_exists() {
  type "$1" &>/dev/null
}

# Deduplicate path variables, shell-agnostic
# TODO: use to cleanup env after logging in
# TODO: probably problematic, test.
get_var() { eval "echo \$$1"; }
set_var() { eval "$1=\"$2\""; }
dedup_pathvar() {
  pathvar_name="$1"
  pathvar_value="$(get_var $pathvar_name)"
  deduped_path="$(echo -n $pathvar_value | perl -e 'print join(":",grep { not $seen{$_}++ } split(/:/, scalar <>))')"
  set_var $pathvar_name "$deduped_path"
}

# https://coderwall.com/p/_s_xda/fix-ssh-agent-in-reattached-tmux-session-shells
fixssh() {
  for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
    if (tmux show-environment | grep "^${key}" >/dev/null); then
      value=$(tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//")
      export ${key}="${value}"
    fi
  done
}

# Shorten the email to the format x@y; useful in prompt
git_user_name_prompt_mkii() {
  gitname=$(git config user.email | sed 's/\(.\).\+@\(..\).\+/\1@\2/')
  gitname_global=$(git config --global user.email | sed 's/\(.\).\+@\(..\).\+/\1@\2/')
  if [[ $gitname != $gitname_global ]]; then
    #echo -n $gitname | color red
    echo -n $gitname îŠ†
  else
    echo -n $gitname
  fi
}

# git quicksave: commit and push
save() {
  if [ -z "${1+x}" ]; then
    #echo "Missing commit message.";
    git commit -a -m "update" && git push
  else
    git commit -a -m "$1" && git push
  fi
}

# Print the argument in the terminal, centered
function center-text() {
  #colcount=$((`tput cols` - 1))
  colcount=$((COLUMNS - 3))
  sed -e :a -e "s/^.\{1,$colcount\}$/ & /;ta"
  unset colcount
}

# Neovim launcher
#n() {
  #if command_exists nvim; then
    #nvim "$@"
  #else
    #echo "nvim is not installed."
  #fi
#}

nerdfont_icon_search() {
  cat $RUNCOM2_PATH/utils/nerd-fonts-scripts/*.sh | sed "s/i=//" | sed "s/=\$i//" | grep -E "^'" | sed "s/'//g" | sort --random-sort | fzf | perl -ne 'print $1 if /^([^ ]+) /' # | xsel --input
}

function emoji_search() {
  emojify -l | tail -n +5 | sort | fzf
}

#function hsi() {
  #history | grep -E -i "$1"
#}

#function esi() {
  #env | grep -E -i "$1"
#}
